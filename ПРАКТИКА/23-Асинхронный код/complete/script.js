"use strict";

const btn = document.querySelector(".btn-country");
const countriesContainer = document.querySelector(".countries");

//////////////////////////////////////

// –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–Ω –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏

// function getCountryData(country) {
//   const request = new XMLHttpRequest();

//   request.open("GET", `https://restcountries.com/v3.1/name/${country}`);
//   request.send();
//   // –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML –∫–æ–¥–µ. + —Ä–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.

//   function renderCards(data, className = "") {
//     const html = `
//     <article class="country ${className}">
//         <img class="country__img" src="${data.flags.svg}" />
//         <div class="country__data">
//             <h3 class="country__name">${data.name.common}</h3>
//             <h4 class="country__region">${data.region}</h4>
//             <p class="country__row"><span>üë´</span>${data.population}</p>
//             <p class="country__row"><span>üó£Ô∏è</span>${
//               Object.entries(data.languages)[0][1]
//             }</p>
//             <p class="country__row"><span>üí∞</span>${
//               Object.entries(Object.entries(data.currencies)[0][1])[0][1]
//             }</p>
//         </div>
//     </article>
//   `;
//     // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É –∏ —É–±–∏—Ä–∞–µ–º –Ω—É–ª–µ–≤—É—é –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
//     countriesContainer.insertAdjacentHTML("beforeend", html);
//     countriesContainer.style.opacity = 1;
//   }

//   // –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ—Å–ª–µ –∏—Ö –∑–∞–≥—Ä—É–∑–∫–∏
//   request.addEventListener("load", function () {
//     const [data] = JSON.parse(this.responseText);
//     console.log(data);
//     const neighbour = data.borders[0];
//     console.log(neighbour);

//     // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–æ–π
//     renderCards(data);

//     // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É –≤–Ω—É—Ç—Ä–∏ –ø–µ—Ä–≤–æ–π call-back —Ñ—É–Ω–∫—Ü–∏–∏
//     const request2 = new XMLHttpRequest();
//     request2.open("GET", `https://restcountries.com/v3.1/alpha/${neighbour}`);
//     request2.send();

//     // –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ—Å–ª–µ –∏—Ö –∑–∞–≥—Ä—É–∑–∫–∏
//     request2.addEventListener("load", function () {
//       const [data2] = JSON.parse(this.responseText);
//       console.log(data2);

//       // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É —Å—Ç—Ä–∞–Ω—ã —Å–æ—Å–µ–¥–∞
//       renderCards(data2, "neighbour");

//       request2.addEventListener("load", function () {
//         const [data2] = JSON.parse(this.responseText);
//         console.log(data2);

//         // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É —Å—Ç—Ä–∞–Ω—ã —Å–æ—Å–µ–¥–∞
//         renderCards(data2, "neighbour");
//       });
//     });
//   });
// }

// getCountryData("russia");

// fetch

// const request = new XMLHttpRequest();

// request.open("GET", `https://restcountries.com/v3.1/name/russia`);
// request.send();
// console.log(request);

// fetch

function renderCards(data, className = "") {
  const html = `
    <article class="country ${className}">
        <img class="country__img" src="${data.flags.svg}" />
        <div class="country__data">
            <h3 class="country__name">${data.name.common}</h3>
            <h4 class="country__region">${data.region}</h4>
            <p class="country__row"><span>üë´</span>${data.population}</p>
            <p class="country__row"><span>üó£Ô∏è</span>${
              Object.entries(data.languages)[0][1]
            }</p>
            <p class="country__row"><span>üí∞</span>${
              Object.entries(Object.entries(data.currencies)[0][1])[0][1]
            }</p>
        </div>
    </article>
  `;
  // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É –∏ —É–±–∏—Ä–∞–µ–º –Ω—É–ª–µ–≤—É—é –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
  countriesContainer.insertAdjacentHTML("beforeend", html);
}
function renderError(message) {
  countriesContainer.insertAdjacentText("beforeend", message);
}

function getCountryData(country) {
  //–°—Ç—Ä–∞–Ω–∞ 1

  //// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

  //   const request = fetch(`https://restcountries.com/v3.1/name/${country}`);

  //   console.log(request);
  //   request
  //     .then(function (response) {
  //       if (!response.ok) {
  //         throw new Error(`${errorMsg}(${response.status})`);
  //       }
  //       return response.json();
  //     })
  //     .then(function (data) {
  //       renderCards(data[0]);
  //      const neighbour = data[0].borders[0];

  //       //–°—Ç—Ä–∞–Ω–∞ —Å–æ—Å–µ–¥
  //       return fetch(`https://restcountries.com/v3.1/alpha/${neighbour}`)
  //         .then(function (response) {
  //           if (!response.ok) {
  //             throw new Error(`–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ (${response.status})`);
  //           }
  //           return response.json();
  //         })
  //         .then(function (data) {
  //           const [res] = data;
  //           renderCards(res, "neighbour");
  //         });
  //     })
  //     .catch(function (err) {
  //       console.log(err);
  //       renderError(
  //         `–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏–∑ –∑–∞ –æ—à–∏–±–∫–∏: ${err.message}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ`
  //       );
  //     })
  //     .finally(function () {
  //       countriesContainer.style.opacity = 1;
  //     });
  // }

  // btn.addEventListener("click", function () {
  //   getCountryData("usa");
  // });

  //// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é.

  function getJSON(url, errorMsg = "–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.") {
    return fetch(url).then(function (response) {
      if (!response.ok) {
        throw new Error(`${errorMsg}(${response.status})`);
      }
      return response.json();
    });
  }

  const request = fetch(`https://restcountries.com/v3.1/name/${country}`);

  getJSON(`https://restcountries.com/v3.1/name/${country}`, "C—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    .then(function (data) {
      renderCards(data[0]);
      console.log(data[0]);
      const neighbour = data[0].borders;
      // const neighbour = "dsgfsdgsdg";
      console.log(neighbour);
      if (!neighbour) {
        throw new Error("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ—Å–µ–¥–µ–π");
      }

      //–°—Ç—Ä–∞–Ω–∞ —Å–æ—Å–µ–¥
      return getJSON(
        `https://restcountries.com/v3.1/alpha/${neighbour}`,
        "C—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
      ).then(function (data) {
        const [res] = data;
        renderCards(res, "neighbour");
      });
    })
    .catch(function (err) {
      console.log(err);
      renderError(`–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏–∑ –∑–∞ –æ—à–∏–±–∫–∏: ${err.message}`);
    })
    .finally(function () {
      countriesContainer.style.opacity = 1;
    });
}

// btn.addEventListener("click", function () {
//   getCountryData("australia");
// });

///////// –ì–æ—Ç–æ–≤–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞. –í–Ω–µ—à–Ω–∏–µ API

// navigator.geolocation.getCurrentPosition(
//   function (pos) {
//     console.log(pos);
//     const { latitude, longitude } = pos.coords;

//     fetch(
//       `https://geocode.xyz/${latitude},${longitude}?geoit=json&auth=442426570626257657862x66288`
//     )
//       .then(function (response) {
//         return response.json();
//       })
//       .then(function (result) {
//         const country = result.country;

//         console.log(result);
//         return fetch(`https://restcountries.com/v3.1/name/${country}`);
//       })
//       .then(function (response) {
//         if (!response.ok) {
//           throw new Error(`–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫(${response.status})`);
//         }
//         return response.json();
//       })
//       .then(function (data) {
//         console.log(data);
//         renderCards(data[1]);
//       })
//       .catch(function (err) {
//         console.log(err);
//         renderError(`–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏–∑ –∑–∞ –æ—à–∏–±–∫–∏: ${err.message}`);
//       })
//       .finally(function () {
//         countriesContainer.style.opacity = 1;
//       });
//   },
//   function () {
//     alert("–í—ã –Ω–µ –ø–µ—Ä–µ–¥–∞–ª–∏ —Å–≤–æ—é –≥–µ–æ-–ø–æ–∑–∏—Ü–∏—é");
//   }
// );

//////////////////
//–ü—Ä–æ–º–∏—Å–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–æ–ª–ª–±—ç–∫–æ–≤

// const lotteryTicket = new Promise(function (resolve, reject) {
//   setTimeout(function () {
//     if (Math.random() >= 0.5) {
//       resolve("Win");
//     } else {
//       reject("lose");
//     }
//   }, 2000);
// });

// lotteryTicket
//   .then(function (res) {
//     console.log(lotteryTicket);
//     console.log(res);
//   })
//   .catch(function (err) {
//     console.error(err);
//   });

// console.log(lotteryTicket);

// setTimeout(function () {
//   console.log("–ü—Ä–æ—à–ª–∞ 1 —Å–µ–∫");
//   setTimeout(function () {
//     console.log("–ü—Ä–æ—à–ª–∞ 2 —Å–µ–∫");
//     setTimeout(function () {
//       console.log("–ü—Ä–æ—à–ª–∞ 3 —Å–µ–∫");
//       setTimeout(function () {
//         console.log("–ü—Ä–æ—à–ª–∞ 4 —Å–µ–∫");
//         setTimeout(function () {
//           console.log("–ü—Ä–æ—à–ª–∞ 5 —Å–µ–∫");
//           setTimeout(function () {
//             console.log("–ü—Ä–æ—à–ª–∞ 6 —Å–µ–∫");
//           }, 1000);
//         }, 1000);
//       }, 1000);
//     }, 1000);
//   }, 1000);
// }, 1000);

// function wait(seconds) {
//   return new Promise(function (resolve) {
//     setTimeout(resolve, seconds * 1000);
//   });
// }

// wait(2)
//   .then(function () {
//     console.log("–í—ã –∂–¥–∞–ª–∏ 1 —Å–µ–∫—É–Ω–¥—ã");
//     return wait(1);
//   })
//   .then(function () {
//     console.log("–í—ã –∂–¥–∞–ª–∏ –µ—â–µ 2 —Å–µ–∫—É–Ω–¥—É");
//     return wait(1);
//   })
//   .then(function () {
//     console.log("–í—ã –∂–¥–∞–ª–∏ 3 —Å–µ–∫—É–Ω–¥—ã");
//     return wait(1);
//   })
//   .then(function () {
//     console.log("–í—ã –∂–¥–∞–ª–∏ 4 —Å–µ–∫—É–Ω–¥—ã");
//     return wait(1);
//   })
//   .then(function () {
//     console.log("–í—ã –∂–¥–∞–ª–∏ 5 —Å–µ–∫—É–Ω–¥—ã");
//     return wait(1);
//   });

////////////////
///–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å —Ä–∞–±–æ—Ç—ã –∫–æ–¥–∞

// console.log("Test start");

// setTimeout(function () {
//   console.log("0 sec timer");
// }, 0);

// Promise.resolve("Resolved promise 1").then(function (res) {
//   console.log(res);
// });

// Promise.resolve("Resolved promise 2").then(function (res) {
//   for (let i = 0; i < 10000000000; i++) {}
//   console.log(res);
// });
// console.log("Test end");

//////////////////

// navigator.geolocation.getCurrentPosition(
//     function (pos) {
//       console.log(pos);
//       const { latitude, longitude } = pos.coords;

//       fetch(
//         `https://geocode.xyz/${latitude},${longitude}?geoit=json&auth=442426570626257657862x66288`
//       )
//         .then(function (response) {
//           return response.json();
//         })
//         .then(function (result) {
//           const country = result.country;

//           console.log(result);
//           return fetch(`https://restcountries.com/v3.1/name/${country}`);
//         })

//////////////////////////
///–ü—Ä–æ–º–∏—Å–∏—Ñ–∏–∫–∞—Ü–∏—è  geolocation API

// new Promise(function (result, reject) {
//   // navigator.geolocation.getCurrentPosition(
//   //   function (position) {
//   //     result(position);
//   //   },
//   //   function (err) {
//   //     reject(err);
//   //   }
//   // );
//   navigator.geolocation.getCurrentPosition(result, reject);
// }).then(function (data) {
//   console.log(data);
// });

//////////////
//  Async/Await

// async function getCountry(country) {
// fetch(`https://restcountries.com/v3.1/name/${country}`)
//   .then(function (response) {
//     return response.json();
//   })
//   .then(function (data) {
//     console.log(data);
//   });

//   try {
//     const res = await fetch(`https://restcountries.com/v3.1/name/${country}`);
//     if (!res.ok) {
//       throw new Error("–£ –≤–∞—Å –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞");
//     }
//     const data = await res.json();

//     return `–í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∞ ${data[0].name.common}`;
//   } catch (err) {
//     throw new Error("–ß—Ç–æ —Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫");
//   }
// }

// btn.addEventListener("click", function () {
//   getCountry("usa");
// });

// // –í–æ–∑–≤—Ä–∞—Ç –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–æ–≤ –ø—Ä–æ–º–∏—Å–æ–≤
// getCountry("usa")
//   .then(function (response) {
//     console.log(response);
//   })
//   .catch(function (err) {
//     console.log(err);
//   });

//   // –í–æ–∑–≤—Ä–∞—Ç –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é async / await
// (async function () {
//   try {
//     const city = await getCountry("usa");
//     console.log(city);
//   } catch (err) {
//     console.log(err);
//   }
// })();

//Promise.all()

async function get3Capital(c1, c2, c3) {
  try {
    //–ù–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ

    // const response1 = await fetch(`https://restcountries.com/v3.1/name/${c1}`);
    // const [data1] = await response1.json();

    // const response2 = await fetch(`https://restcountries.com/v3.1/name/${c2}`);
    // const [data2] = await response2.json();

    // const response3 = await fetch(`https://restcountries.com/v3.1/name/${c3}`);
    // const [data3] = await response3.json();

    //–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
    const data = await Promise.all([
      fetch(`https://restcountries.com/v3.1/name/${c1}`).then(function (resp) {
        return resp.json();
      }),
      fetch(`https://restcountries.com/v3.1/name/${c2}`).then(function (resp) {
        return resp.json();
      }),
      fetch(`https://restcountries.com/v3.1/name/${c3}`).then(function (resp) {
        return resp.json();
      }),
    ]);

    // console.log(
    //   data.map(function (val) {
    //     return val[0].capital;
    //   })
    // );
  } catch (err) {}
}

get3Capital("russia", "turkey", "thailand");

//Promise.race()

(async function () {
  const res = await Promise.race([
    fetch(`https://restcountries.com/v3.1/name/usa`).then(function (resp) {
      return resp.json();
    }),
    fetch(`https://restcountries.com/v3.1/name/russia`).then(function (resp) {
      return resp.json();
    }),
    fetch(`https://restcountries.com/v3.1/name/thailand`).then(function (resp) {
      return resp.json();
    }),
  ]);
})();

function timeout(sec) {
  return new Promise(function (_, reject) {
    setTimeout(function () {
      reject(new Error(`–û–∂–∏–¥–∞–Ω–∏–µ –ø—Ä–µ–≤—ã—Å–∏–ª–æ ${sec} c–µ–∫.`));
    }, sec * 1000);
  });
}

Promise.race([
  fetch(`https://restcountries.com/v3.1/name/usa`).then(function (resp) {
    return resp.json();
  }),
  timeout(0.4),
])
  .then(function (res) {
    console.log(res[0]);
  })
  .catch(function (err) {
    console.log(err);
  });

////Promise.allSettled()
Promise.allSettled([
  Promise.resolve("–í—ã–ø–æ–ª–Ω–µ–Ω"),
  Promise.reject("–û—Ç–∫–ª–æ–Ω–µ–Ω"),
  Promise.resolve("–ï—â–µ –æ–¥–∏–Ω –í—ã–ø–æ–ª–Ω–µ–Ω"),
]).then(function (res) {
  console.log(res);
});

// Promise.all([
//   Promise.resolve("–í—ã–ø–æ–ª–Ω–µ–Ω"),
//   Promise.reject("–û—Ç–∫–ª–æ–Ω–µ–Ω"),
//   Promise.resolve("–ï—â–µ –æ–¥–∏–Ω –í—ã–ø–æ–ª–Ω–µ–Ω"),
// ]).then(function (res) {
//   console.log(res);
// });

////Promise.any()

Promise.any([
  Promise.resolve("–í—ã–ø–æ–ª–Ω–µ–Ω"),
  Promise.reject("–û—Ç–∫–ª–æ–Ω–µ–Ω"),
  Promise.resolve("–ï—â–µ –æ–¥–∏–Ω –í—ã–ø–æ–ª–Ω–µ–Ω"),
]).then(function (res) {
  console.log(res);
});
